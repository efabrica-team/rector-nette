includes:
    - vendor/symplify/phpstan-rules/config/nette-rules.neon
    - vendor/symplify/phpstan-rules/config/static-rules.neon
    - vendor/symplify/phpstan-rules/config/array-rules.neon
    - vendor/symplify/phpstan-rules/config/code-complexity-rules.neon
    - vendor/symplify/phpstan-rules/config/forbidden-static-rules.neon
    - vendor/symplify/phpstan-rules/config/doctrine-rules.neon
    - vendor/symplify/phpstan-rules/config/size-rules.neon
    - vendor/symplify/phpstan-rules/config/regex-rules.neon
    - vendor/symplify/phpstan-rules/config/symfony-rules.neon
    - vendor/symplify/phpstan-rules/config/test-rules.neon
    - vendor/symplify/phpstan-rules/config/services-rules.neon
    - vendor/symplify/phpstan-rules/config/naming-rules.neon
    - vendor/symplify/phpstan-rules/config/string-to-constant-rules.neon

parameters:
    level: 8

    paths:
        - config
        - src
        - tests

    scanDirectories:
        - stubs

    excludePaths:
        - */Source/*
        - *Source/*

    reportUnmatchedIgnoredErrors: false

    ignoreErrors:
        - '#Class "Rector\\Nette\\Rector\\Class_\\MoveFinalGetUserToCheckRequirementsClassMethodRector" is missing @see annotation with test case class reference#'

        - '#Cognitive complexity for "Rector\\Nette\\Kdyby\\ContributeEventClassResolver\:\:resolveGetterMethodByEventClassAndParam\(\)" is 10, keep it under 9#'
        - '#Cognitive complexity for "Rector\\Nette\\NodeFinder\\FormFieldsFinder\:\:find\(\)" is 10, keep it under 9#'
        - '#Cognitive complexity for "Rector\\Nette\\NodeFinder\\FormOnSuccessCallbackFinder\:\:find\(\)" is 10, keep it under 9#'
        - '#Cognitive complexity for "Rector\\Nette\\NodeFinder\\FormVariableFinder\:\:find\(\)" is 10, keep it under 9#'

        - '#generic class Rector\\BetterPhpDocParser\\PhpDocInfo\\PhpDocInfo but does not specify its types\: TNode#'
        - '#Use another value object over array with string\-keys and objects, array<string, ValueObject\>#'

        -
            message: '#new <class\> is limited to 3 "new <class\>\(new <class\>\)\)" nesting to each other\. You have \d+ nesting#'
            path:  config/sets

        # not on PHP 7.4 yet
        - '#This property type might be inlined to PHP\. Do you have confidence it is correct\? Put it here#'

        -
            message: '#Use required typed property over of nullable property#'
            path: src/NodeAnalyzer/TemplatePropertyAssignCollector.php

        # PHPSTan false positive
        - '#Parameter \#1 \$className (.*?) expects class\-string, string given#'

        # PHPStan false positive? I don't think there is some constant expression
        -
            message: '#Move constant expression to __construct\(\), setUp\(\) method or constant#'
            paths:
                - src/Rector/Class_/LatteVarTypesBasedOnPresenterTemplateParametersRector.php
                - src/Rector/Class_/TemplateTypeBasedOnPresenterTemplateParametersRector.php

        # PHPStan false positive. There is no method configure on reported line
        -
            message: '#Method configure\(\) with passed value object must contain assert to verify passed type#'
            path: src/Rector/Class_/TemplateTypeBasedOnPresenterTemplateParametersRector.php

        # this is the way how it works in rector-src
        -
            message: '#Array with keys is not allowed\. Use value object to pass data instead#'
            paths:
                - src/Rector/Class_/FormDataRector.php
                - src/Rector/Class_/TemplateTypeBasedOnPresenterTemplateParametersRector.php

        # complex logic
        - '#Cognitive complexity for "Rector\\Nette\\NodeAnalyzer\\TemplatePropertyAssignCollector\:\:processAssign\(\)" is \d+, keep it under 10#'

        # waits for php-aprser compatible with nikic/php-parser 4.13
        - '#PhpParser\\Node\\Arg\|PhpParser\\Node\\VariadicPlaceholder#'

        -
            message: '#Parameter "eventAndListenerTree" cannot have default value#'
            path: src/Kdyby/NodeManipulator/ListeningClassMethodArgumentManipulator.php

        # callback/closure false positive
        - '#Parameter \#2 \$callback of function array_filter expects callable\(PhpParser\\Node\\Expr\\ArrayItem\|null\)\: mixed, Closure\(PhpParser\\Node\\Expr\\ArrayItem\)\: true given#'

        # false positive, class name
        - '#The string value "Nette\\Utils\\Strings" is repeated \d+ times\. Refactor to enum to avoid typos and make clear allowed values#'

        # traverser of type
        -
            path: src/Rector/Neon/RenameMethodNeonRector.php
            message: '#Instead of "instanceof/is_a\(\)" use ReflectionProvider service or "\(new ObjectType\(<desired_type\>\)\)\-\>isSuperTypeOf\(<element_type\>\)" for static reflection to work#'

        -
            path: src/NodeFactory/ClassWithPublicPropertiesFactory.php
            message: '#Instead of array shape, use value object with specific types in constructor and getters#'

        -
            path: src/NodeAnalyzer/MethodCallManipulator.php
            message: '#Do not use "array_filter" function with complex content, make it more readable with extracted method or single\-line statement#'

        - '#Dynamic call to static method PHPUnit\\Framework\\Assert\:\:(.*?)\(\)#'
        # rector co-variant
        - '#Parameter \#1 \$node \(PhpParser\\Node\\(.*?) of method Rector\\Nette\\(.*?)\(\) should be contravariant with parameter \$node \(PhpParser\\Node\) of method Rector\\Core\\Contract\\Rector\\PhpRectorInterface\:\:refactor\(\)#'


        # invalid generics
        - '#Method (.*?) has parameter \$neonRectors with generic interface Rector\\Nette\\Contract\\Rector\\NeonRectorInterface but does not specify its types\: TNode#'
        - '#Property (.*?) with generic interface Rector\\Nette\\Contract\\Rector\\NeonRectorInterface does not specify its types\: TNode#'

        # fixed in dev-main symplify
        - '#Do not use chained method calls\. Put each on separated lines#'


        -
             message: '#Instead of array shape, use value object with specific types in constructor and getters#'
             paths:
                 - src/FileProcessor/LatteFileProcessor.php
                 - src/FileProcessor/NeonFileProcessor.php
