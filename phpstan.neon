includes:
    - vendor/symplify/phpstan-rules/config/packages/nette/nette-rules.neon
    - vendor/symplify/phpstan-rules/config/packages/symfony/symfony-rules.neon
    - vendor/symplify/phpstan-rules/config/static-rules.neon
    - vendor/symplify/phpstan-rules/config/array-rules.neon
    - vendor/symplify/phpstan-rules/config/forbidden-static-rules.neon
    - vendor/symplify/phpstan-rules/config/doctrine-rules.neon
    - vendor/symplify/phpstan-rules/config/regex-rules.neon
    - vendor/symplify/phpstan-rules/config/test-rules.neon
    - vendor/symplify/phpstan-rules/config/naming-rules.neon

parameters:
    level: 8

    paths:
        - config
        - src
        - tests

    scanDirectories:
        - stubs

    excludePaths:
        - */Source/*
        - *Source/*

    reportUnmatchedIgnoredErrors: false

    bootstrapFiles:
        # loads scoped files like SmartFileInfo
        - vendor/rector/rector/vendor/scoper-autoload.php

    ignoreErrors:
        # PHPStan false positive. There is no method configure on reported line
        -
            message: '#Method configure\(\) with passed value object must contain assert to verify passed type#'
            path: src/Rector/Class_/TemplateTypeBasedOnPresenterTemplateParametersRector.php

        -
            message: '#Instead of array shape, use value object with specific types in constructor and getters#'
            paths:
                - src/NodeFactory/ClassWithPublicPropertiesFactory.php
                - src/FileProcessor/LatteFileProcessor.php

        - '#Dynamic call to static method PHPUnit\\Framework\\Assert\:\:(.*?)\(\)#'

        # rector co-variant
        - '#Parameter \#1 \$node \(PhpParser\\Node\\(.*?) of method RectorNette\\(.*?)\(\) should be contravariant with parameter \$node \(PhpParser\\Node\) of method Rector\\Core\\Contract\\Rector\\PhpRectorInterface\:\:refactor\(\)#'

        -
            message: '#Do not use chained method calls\. Put each on separated lines#'
            path: config/*

        -
            message: '#Use another value object over array with string\-keys and objects, array<string, ValueObject>#'
            path: src/ValueObject/TemplateParametersAssigns.php

        - '#Instead of "PhpParser\\Builder\\(.*?)" class/interface use "Rector\\Core\\PhpParser\\Builder\\(.*?)"#'

        - '#Cognitive complexity for "RectorNette\\NodeAnalyzer\\TemplatePropertyAssignCollector\:\:processAssign\(\)" is 21, keep it under 10#'
